{"version":3,"sources":["Components/SpecialTable/SpecialColumn/SpecialCell/SpecialCell.js","Components/SpecialTable/SpecialColumn/actions/index.js","Components/SpecialTable/SpecialColumn/Pagination/Pagination.js","Components/SpecialTable/utils/paginationSlice.js","Components/SpecialTable/SpecialColumn/SpecialColumn.js","Components/SpecialTable/SpecialColumn/reducers/cellsReducer.js","Components/SpecialTable/SpecialColumn/reducers/index.js","Components/SpecialTable/SpecialColumn/reducers/filterReducer.js","Components/SpecialTable/SpecialColumn/reducers/topDownFilterReducer.js","Components/SpecialTable/SpecialColumn/reducers/pageReducer.js","Components/SpecialTable/utils/columnsStorage.js","Components/SpecialTable/SpecialTable.js","Components/App/App.js","index.js"],"names":["SpecialCell","pos","value","removeCell","handleChange","className","type","onChange","e","target","onClick","changeCellsArray","arr","payload","changePage","connect","state","page","pageReducer","cells","cellsReducer","dispatch","useDispatch","length","config","CELLS_ON_PAGE","paginationSlice","dataArray","pageNumber","itemsToShow","slice","filterState","filterReducer","filterTopDown","topDownFilterReducer","tableName","stateCallback","localState","itemsOnPage","handleCellChanges","newValue","newarr","filter","item","handleRemoveCell","useEffect","globalStateData","JSON","parse","currentColumnState","find","obj","index","table","values","event","name","placeholder","uuid","filteredCells","toUpperCase","includes","sort","a","b","handleFilter","map","cell","defaultCells","reducers","combineReducers","action","CELLS","SpecialTable","arrOfNames","generatorOfGlobalState","handleColumnsChanges","tableState","localData","store","createStore","newColumn","localStorage","getItem","data","setItem","stringify","App","NAMES_OF_TABLES","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76779de2.chunk.js","sourcesContent":["import React from 'react'\r\nimport './SpecialCell.css'\r\n\r\nconst SpecialCell = ({pos, value, removeCell, handleChange}) => {\r\n  return (\r\n    <li className='special-cell'>\r\n      <input\r\n        type='text'\r\n        className='special-cell__input'\r\n        value={value}\r\n        onChange={(e) => {handleChange(pos, e.target.value)}}\r\n      />\r\n      <button \r\n        onClick={() => {removeCell(pos)}}\r\n        className='special-cell__del-button'\r\n      ></button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default SpecialCell","export const changeCellValue = value => {\r\n  return {\r\n    type: 'NEW_CELL_VALUE',\r\n    payload: value\r\n  }\r\n}\r\n\r\nexport const changeCellsArray = arr => {\r\n  return {\r\n    type: 'NEW_CELLS',\r\n    payload: arr\r\n  }\r\n}\r\n\r\nexport const changeFilter = value => {\r\n  return {\r\n    type: 'NEW_FILTER_VALUE',\r\n    payload: value\r\n  }\r\n}\r\n\r\nexport const changePage = (value) => {\r\n  return {\r\n    type: 'CHANGE_PAGE_VALUE',\r\n    payload: value\r\n  }\r\n}\r\n\r\nexport const addNewCell = (pos) => {\r\n  return {\r\n    type: 'NEW_CELL',\r\n    payload: { pos, value: ''}\r\n  }\r\n}\r\n\r\nexport const loadUserCells = (cellsArr) => {\r\n  return {\r\n    type: 'LOAD_CELLS',\r\n    payload: cellsArr\r\n  }\r\n}\r\n\r\nexport const toTopFilter = () => {\r\n  return {\r\n    type: 'FILTER_TO_TOP'\r\n  }\r\n}\r\n\r\nexport const toDownFilter = () => {\r\n  return {\r\n    type: 'FILTER_TO_DOWN'\r\n  }\r\n}","import React from 'react'\r\nimport './Pagination.css'\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport {changePage} from '../actions'\r\nimport config from '../../utils/config.json'\r\n\r\nconst Pagination = ({page, cells}) => {\r\n  const dispatch = useDispatch()\r\n  const increasePageNumber = () => {\r\n    if(cells.length > (page*config.CELLS_ON_PAGE)) {\r\n      dispatch(changePage(page + 1))\r\n    }\r\n  }\r\n  const decreasePageNumber = () => {\r\n    if(page > 1) {\r\n      dispatch(changePage(page - 1))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='pagination'>\r\n        <button \r\n          className='pagination__button'\r\n          onClick={() => {decreasePageNumber()}}\r\n        >&lt;</button>\r\n        <div className='pagination__page-number'>{page}</div>\r\n        <button \r\n          className='pagination__button'\r\n          onClick={() => {increasePageNumber()}}\r\n        >&gt;</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { \r\n    page: state.pageReducer,\r\n    cells: state.cellsReducer\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Pagination)","export default function paginationSlice(dataArray, pageNumber, itemsToShow) {\r\n  return dataArray.slice( \r\n      ( pageNumber - 1 ) * itemsToShow, pageNumber * itemsToShow \r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport './SpecialColumn.css'\r\nimport SpecialCell from './SpecialCell/SpecialCell'\r\nimport Pagination from './Pagination/Pagination'\r\nimport { v4 as uuid } from 'uuid'\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport {\r\n  changeFilter, \r\n  changeCellsArray, \r\n  toTopFilter,\r\n  toDownFilter,\r\n  addNewCell\r\n} from './actions'\r\nimport paginationSlice from '../utils/paginationSlice'\r\nimport config from '../utils/config.json'\r\n\r\nconst SpecialColumn = ({cells, page, filterState, filterTopDown, tableName, stateCallback, localState}) => {\r\n  const dispatch = useDispatch()\r\n  const itemsOnPage = config.CELLS_ON_PAGE\r\n  const handleChange = (event) => dispatch(changeFilter(event.target.value))\r\n  const handleFilter = () => {\r\n    const filteredCells = cells.filter(item => \r\n      item.value.toUpperCase().includes(filterState.toUpperCase()) ? item : ''\r\n    )\r\n    if (filterState === '') {\r\n      if (filterTopDown === 'toTop') {\r\n        const cellsArray = cells.sort((a, b) => b.value.length - a.value.length)\r\n        return paginationSlice(cellsArray, page, itemsOnPage)\r\n      }\r\n      if (filterTopDown === 'toDown') {\r\n        const cellsArray = cells.sort((a, b) => a.value.length - b.value.length)\r\n        return paginationSlice(cellsArray, page, itemsOnPage)\r\n      }\r\n    }\r\n    if(filterTopDown === 'toTop') {\r\n      const cellsArray = filteredCells.sort((a, b) => b.value.length - a.value.length)\r\n      return paginationSlice(cellsArray, page, itemsOnPage)\r\n    }\r\n    if(filterTopDown === 'toDown') {\r\n      const cellsArray = filteredCells.sort((a, b) => a.value.length - b.value.length)\r\n      return paginationSlice(cellsArray, page, itemsOnPage)\r\n    }\r\n    return paginationSlice(filteredCells, page, itemsOnPage)\r\n  }\r\n  const handleCellChanges = (pos, newValue) => {\r\n    const newarr = cells.filter(item => item.pos === pos ? item.value=newValue : item)\r\n    dispatch(changeCellsArray(newarr))\r\n    stateCallback(tableName, cells)\r\n  }\r\n  const handleAddCell = () => {\r\n    dispatch(addNewCell(uuid()))\r\n  }\r\n  const handleRemoveCell = (pos) => {\r\n    const newarr = cells.filter(item => item.pos === pos ? '' : item)\r\n    dispatch(changeCellsArray(newarr))\r\n  }\r\n  const changeFilterTopOrDown = () => {\r\n    if(filterTopDown === 'toDown') {\r\n      dispatch(toTopFilter())\r\n    }\r\n    if(filterTopDown === 'toTop') {\r\n      dispatch(toDownFilter())\r\n    }\r\n    if(filterTopDown === 'default') {\r\n      dispatch(toTopFilter())\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const globalStateData = JSON.parse(localState)\r\n    const currentColumnState = globalStateData \r\n      ? globalStateData.find((obj, index) => {\r\n        if (obj.table === tableName) {\r\n          return globalStateData[index]\r\n        }\r\n      })\r\n      : { table: 'notable', values: 'novalues'}\r\n    if (currentColumnState.table !== 'notable') {\r\n      dispatch(changeCellsArray(currentColumnState.values))\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <section\r\n      className='special-column'\r\n    >\r\n      \r\n      <div className='special-column__control-block'>\r\n        <input\r\n          type='text'\r\n          className='special-column__special-cell'\r\n          value={filterState}\r\n          onChange={handleChange}\r\n          name='filterInput'\r\n          placeholder='Enter filter...'\r\n        />\r\n\r\n        <button \r\n          onClick={handleAddCell}\r\n        >Add New Cell</button>\r\n      </div>\r\n\r\n      <div className='special-column__cells-block'>\r\n        <button\r\n          onClick={() => {changeFilterTopOrDown()}}\r\n          className='special-column__cells-block_button'\r\n        >{tableName}</button>\r\n\r\n        <ul \r\n          className='special-column__cells-list'\r\n        >\r\n          {handleFilter()?.map((cell) => \r\n            <SpecialCell \r\n              key={cell.pos}\r\n              value={cell.value}\r\n              pos={cell.pos}\r\n              handleChange={handleCellChanges}\r\n              removeCell={handleRemoveCell}\r\n            />\r\n          )}\r\n        </ul>\r\n      </div>\r\n\r\n      <Pagination />\r\n\r\n    </section>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { \r\n    cells: state.cellsReducer,\r\n    page: state.pageReducer,\r\n    filterState: state.filterReducer,\r\n    filterTopDown: state.topDownFilterReducer\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SpecialColumn)","const defaultCells = [{pos: 'default1', value: ''}, {pos: 'default2', value: ''}, {pos: 'default3', value: ''}]\r\n\r\n// const defaultCells = []\r\n\r\nexport const cellsReducer = (state = defaultCells, action) => {\r\n  switch(action.type) {\r\n    case 'NEW_CELL':\r\n      return [...state, action.payload]\r\n    case 'NEW_CELL_VALUE':\r\n      return [...state, action.payload]\r\n    case 'NEW_CELLS':\r\n      return action.payload\r\n    case 'LOAD_CELLS':\r\n      return action.payload\r\n    default:\r\n      return state\r\n  }\r\n}","import {cellsReducer} from './cellsReducer'\r\nimport {filterReducer} from './filterReducer'\r\nimport {pageReducer} from './pageReducer'\r\nimport {topDownFilterReducer} from './topDownFilterReducer'\r\nimport {combineReducers} from 'redux'\r\n\r\nconst reducers = combineReducers({\r\n  cellsReducer,\r\n  filterReducer,\r\n  topDownFilterReducer,\r\n  pageReducer\r\n})\r\n\r\nexport default reducers","export const filterReducer = (state = '', action) => {\r\n  switch(action.type) {\r\n    case 'NEW_FILTER_VALUE':\r\n      return action.payload\r\n    default:\r\n      return state\r\n  }\r\n}","export const topDownFilterReducer = (state = 'default', action) => {\r\n  switch(action.type) {\r\n    case 'FILTER_TO_TOP':\r\n      return 'toTop'\r\n    case 'FILTER_TO_DOWN':\r\n      return 'toDown'\r\n    default:\r\n      return state\r\n  }\r\n}","export const pageReducer = (state = 1, action) => {\r\n  switch(action.type) {\r\n    case 'CHANGE_PAGE_VALUE':\r\n      return action.payload\r\n    default:\r\n      return state\r\n  }\r\n}","const CELLS = 'localColumnsStorage'\r\n\r\nexport const setLocalData = (data) => {\r\n  localStorage.setItem(CELLS, JSON.stringify(data))\r\n}\r\n\r\nexport const getLocalData = () => {\r\n  return localStorage.getItem(CELLS)\r\n}\r\n\r\nexport const removeLocalData = () => {\r\n  localStorage.removeItem(CELLS)\r\n}","import React from 'react'\r\nimport './SpecialTable.css'\r\nimport SpecialColumn from './SpecialColumn/SpecialColumn'\r\nimport { Provider } from 'react-redux'\r\nimport { createStore } from 'redux'\r\nimport reducers from './SpecialColumn/reducers'\r\nimport {setLocalData, getLocalData} from './utils/columnsStorage'\r\n\r\nconst newColumn = (tableName, stateCallback, localData) => {\r\n  const store = createStore(reducers);\r\n\r\n  return  <Provider store={store} key={tableName}>\r\n            <SpecialColumn \r\n              stateCallback={stateCallback}\r\n              tableName={tableName}\r\n              localState={localData}\r\n            />\r\n          </Provider>\r\n}\r\n\r\nexport default function SpecialTable({arrOfNames}) {\r\n  let generatorOfGlobalState = arrOfNames.map(item => {return { table: item, values: []}})\r\n\r\n  const handleColumnsChanges = (tableName, tableState) => {\r\n    generatorOfGlobalState.find((obj, index) => {\r\n      if (obj.table === tableName) {\r\n        generatorOfGlobalState[index] = {table: tableName, values: tableState}\r\n        return true\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    \r\n    <section className='special-table'>\r\n      <div className='special-table__columns'>\r\n        {arrOfNames.map(item =>\r\n        newColumn(item, handleColumnsChanges, getLocalData()))}\r\n      </div>\r\n      <button \r\n        onClick={() => {setLocalData(generatorOfGlobalState)}}\r\n        className='special-table__save-button'\r\n      >GLOBAL SAVE</button>\r\n    </section>\r\n\r\n  )\r\n}","import React from 'react'\r\nimport './App.css'\r\nimport { NAMES_OF_TABLES } from '../SpecialTable/utils/config.json'\r\nimport SpecialTable from '../SpecialTable/SpecialTable'\r\n\r\n\r\nexport default function App() {\r\n\r\n  return (\r\n    <div className='App'>\r\n      <div className='page'>\r\n\r\n\r\n      <SpecialTable\r\n        arrOfNames={NAMES_OF_TABLES}\r\n      />\r\n\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\n\r\nimport App from './Components/App/App'\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}